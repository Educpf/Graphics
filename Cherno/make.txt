# Compiler and flags
CXX = g++
CXXFLAGS = -std=c++11 -Wall -Wextra -Iinclude
LDFLAGS = -lm -lglfw -lGLEW -lGL

# Directories
SRCDIR = src
INCDIR = include
OBJDIR = obj
DEPDIR = dep
BINDIR = bin

# Source and object files
SRCS = $(wildcard $(SRCDIR)/**/*.cpp) $(wildcard $(SRCDIR)/*.cpp)
OBJS = $(patsubst $(SRCDIR)/%.cpp, $(OBJDIR)/%.o, $(SRCS))
DEPS = $(patsubst $(OBJDIR)/%.o, $(DEPDIR)/%.d, $(OBJS))

# Output executable
TARGET = $(BINDIR)/rooster

# Default target
all: $(TARGET)

# Rule to link the object files into the executable
$(TARGET): $(OBJS)
	@mkdir -p $(BINDIR)
	$(CXX) $(CXXFLAGS) $(OBJS) -o $@ $(LDFLAGS)

# Pattern rule to compile source files into object files with dependency generation
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(OBJDIR) $(DEPDIR) $(dir $(OBJDIR)/$*)
	$(CXX) $(CXXFLAGS) -MMD -MP -c $< -o $@
	@mv $(OBJDIR)/$*.d $(DEPDIR)/$*.d

# Include dependency files
-include $(DEPS)

# Clean target to remove intermediate and output files
clean:
	rm -rf $(OBJDIR) $(DEPDIR) $(BINDIR)

# Phony targets
.PHONY: all clean
